

usage(){
	case $1 in
	download_SRA)
echo -e "
==========
usage: download_SRA -f <LIST of STRING> -o <PATH> -t [INT]

general infos: automatically/directly download datasets from NCBI's SRA repository based on SRR code

-- Mandatory arguments:
    -f      STRING  :    List of SRA IDs to download. example: 
                         (\"STR1\" \"STR2\" ... \"STRn\")
    -o      PATH    :    Set the Output directory, where you will find the 
                         FASTQ files created by this program.

-- optional arguments :
    -t     INT      :    Set the number of threads to use. (default: 1)
\n";;
	mapping_Fastq_bowtie2)
echo -e "
==========
usage: mapping_Fastq_bowtie2 -id <PATH> -od <PATH> -s [int] -pr [int]

general infos: Perfoms short reads mapping and filtering (PCR duplicates, poor 
               mapping quality, multimapping removed).

-- Mandatory arguments:
    -id     PATH    :    Set the directory where the Fastq is stored.
                         In case of paired-end analysis, please regroup your 
                         Fastq in the same directory.
    -od     PATH    :    Set the Output directory, where you will find the BAM
                         files created by this program.
    
-- optional arguments :
    -s      INT     :    Set the seed for the random (default: 1254)
    -pr     INT     :    Set the number of threads to use. (default: 1)
\n";;
	main_mapping_Fastq)
echo -e "
==========
usage: main_mapping_Fastq -fd <PATH> -md <PATH> -f1 <FILE> -f2 [FILE] 
       -n <STRING> -s [INT] -pr [INT]

general infos: directory and file preparation for the mapping step

-- Mandatory arguments:
    -fd     PATH    :    Set the directory where the Fastq is stored. If the
                         Fastq are stored in another folder, they will be copy
                         pasted in the directory selected here.
    -md     PATH    :    Set the Output directory, where you will find the BAM
                         files created by this programs.
    -f1     FILE    :    Set the Fastq file to be used for the mapping. In 
                         case of paired-end analysis please separate pairs in 
                         two files (see -f2 argument)
    -n      STRING  :    Name of the sub-folder to be created in the output
                         directory.

-- optional arguments :
    -f2     FILE    :    Set the Fastq file for the second mate of the pairs.
                         leave empty in case of single end analysis.
    -s      INT     :    Set the seed for the random (default: 1254)
    -pr     INT     :    Set the number of threads to use. (default: 1)
\n";;
	peakcalling_MACS2)
echo -e "
==========
usage: peakcalling_MACS2 -id <PATH> -od <PATH> -g <FILE> -add [STRING]

general infos: perform peak calling and peak filtration (forbidden regions)

-forbidden regions: those are regions that present a high coverage in control.
         Those regions are therefore removed from analysis.

-- Mandatory arguments:
    -id     PATH    :    Set the directory where the BAM files are stored
    -od     PATH    :    Set the Output directory, where you will find the 
                         BEDGRAPH and NarrowPeak files generated by this 
                         program.

-- optional arguments :
    -g      INT     :    Set the genome length to use as reference for peak 
                         calling
    -add    STRING  :    Set the additionnal parameters for MACS2 (option used
                         by default: -t -c -B -f -n -g; please do not 
                         overwrite those)
\n";;
	main_peakcalling) # main_peakcalling -id -cd -od -nc -g -add
echo -e "
==========
usage: main_peakcalling -id <PATH> -cd <PATH> -od <PATH> -nc <STRING> 
       -g [FILE] -add [STRING] -top [INT]

general infos: file/directory preparation, peakcalling_MACS2 launching,
               Multiple Sample Peak Calling (MSPC) procedure, union of 
               coverages, peak resizing.

-- Mandatory arguments:
    -id     PATH    :    Set the directory where the BAM files are stored
    -cd     PATH    :    Set the directory where the BAM files for the control
                         sets are stored
    -od     PATH    :    Set the Output directory, where you will find the 
                         BEDGRAPH and NarrowPeak files created by this 
                         programs.
    -nc     STRING  :    Set the name of the final output directory where the
                         consensus NarrowPeak & BEDGRAPH will be stored

-- optional arguments :
    -ps     INT     :    Used to resize peaks region both side of the max height
                         default is 400 bp (i.e. 200 bp at each side)
    -g      INT     :    Set the genome length to use as reference for peak 
                         calling
    -add    STRING  :    Set the additionnal parameters for MACS2 (option used
                         by default: -t -c -B -f -n -g; please do not 
                         overwrite those)
    -top    INT     :    Set the maximum number of peaks to use. Peaks will be
                         ordered by p-value before the cut-off is applied
\n";;
	initial_comparison) # main_peakcalling -id -cd -od -nc -g -add
echo -e "
==========
usage: initial_comparison -n1 <STRING> -n2 <STRING> -od <PATH> -id <PATH> 
       -r1 <INT> -r2 <INT> -f [INT]

general infos: comparison of peaks coverage from any two samples or replicats,
               filtered (optional) by the height of maximum or global peak 
               coverages,  plot the union of peaks depending of coverages in 
               the two samples, peak reattribution according to CFR (and not 
               according to peak caller; plots with both for comparison).

CFR: coverages fold ratio

-- Mandatory arguments:
    -n1     STRING  :    name of directory for dataset 1
    -n2     STRING  :    name of directory for dataset 2
    -od     PATH    :    Set the Output directory, where you will find the 
                         BEDGRAPH and NarrowPeak files created by this 
                         programs.
    -id     PATH    :    Set the directory where the BED/BEDGRAPH files are
                         stored.
    -r1     INT     :    Set the coverage fold ratio -CFR- from which the 
                         peaks will be considered specific of the datatset 1
    -r2     INT     :    Set the CFR from which the peaks will be 
                         considered specific of the datatset 2

-- optional arguments :
    -f      INT     :    Threshold of coverage -in RPKM-. Filters out peaks
                         for which for both samples do not pass the threshold.
    -he     INT     :    Threshold on the maximum height of coverage -in RPKM-
                         Filters out peaks for which both samples have maximum
                         of coverage below this value.
\n";;
	compute_motif) 
echo -e "
==========
usage: compute_motif -p <FILE> -n <STRING> -od <PATH> -g [FILE] -ls [INT]
       -nm [INT] -mim [INT] -mam [INT] -mt [INT] [-pal] -s [INT]

general infos: PWM and TFFM motif generation using learning set (creation of 
               testing set for later use).

PWM: Position Weight Matrix
TFFM: Transcription Factor Flexible Model

-- Mandatory arguments:
    -p     FILE     :    peak file to use (bed, narrowpeak format accepted)
    -n     STRING   :    name for result directory (to be created)
    -od    PATH     :    Set the Output directory (will include the 
                         subdirectory created by -n option)

-- optional arguments :
    -c      INT     :    Set the column number (base 1) to use as a coverage
                         column in the peak file (-p argument). This column 
                         will be used for a numeric sort.
    -g      FILE    :    Set the genome file to use as reference
    -ls     INT     :    Set the learning-size for both PWM and TFFM 
                         matrices
    -nm     INT     :    Set the number of PWM matrices to compute
    -mim    INT     :    Set the minimum width of PWM matrices
    -mam    INT     :    Set the maximum width of PWM matrices
    -mt     INT     :    Set which PWM matrix to use as model for TFFM 
                         computation (starts as 0)
    -pal            :    Activate the palindromic mode for PWM matrices. 
                         Does not work for TFFM computation
    -s      INT     :    Set the seed for random
\n";;
	prep_annotation) 
echo -e "
==========
usage: prep_annotation -n <FILE> -p <INT> -g <FILE>

general infos: preparation of annotation file necessary for negative set 
               generation. Modification of gff file (adding intergenic, 
               promoter regions)

gff should include chromosomes features and standard gff3 format

-- Mandatory arguments:
    -n     FILE     :    gff file of the genome, stripped of its extension
    -p     STRING   :    size for the promoters
    -g     FILE     :    Reference genome fasta file
\n";;
	compute_NS) 
echo -e "
==========
usage: compute_NS -p <FILE> -n <STRING> -g <FILE> -od <PATH> -anf <FILE> 
       -nb [INT] -ws [INT] -gc [INT] -lt [INT] -s [INT]

general infos: creation of negative sets (for ROCs and spacing analysis). 
               Negative sequences are created to be the closest possible to 
               the \"positive\" sequences (the peaks), negative sequences must
               originate from the same type of regions (promoters, exon, 
               intergenic, etc), have a GC percentage as close as possible and
               not be bound (not in the positive sequences).

-- Mandatory arguments:
    -n     STRING   :    name for the results files
    -p     FILE     :    peak file (bed format)
    -g     FILE     :    reference genome fasta file
    -od    PATH     :    Set the Output directory
    -anf   PATH     :    Annotation file, created by prep_annotation function

-- optional arguments :
    -nb    INT      :    number of separate negative sets file to create
                         (default: 1)
    -ws    INT      :    size of the window used to slice the genome. Ideally 
                         the it should be set 30-50 higher than the smallest
                         peak in the positive set (default: 250)
    -gc    INT      :    ideal maximum difference wanted for %GC. Note that 
                         it can be moved higher by the program if need be (not
                         enough regions with similar GC%; default: 0.03)
    -lt    INT      :    minimum number of genomic regions sharing the same 
                         complex origin (example : intron;exon; default: 1000)
    -s     INT      :    Set the seed for random
\n";;
	compute_ROCS) 
echo -e "
==========
usage: compute_ROCS -p <LIST of FILE> -ns <LIST of FILE> -m <LIST of FILE>
       -n <LIST of STRING> -od <PATH> -g [FILE] [-pc] -color [LIST of STRING]
       -nKSM [INT]

general infos: computes scores for PWM/TFFM on negative sequences and peaks.
               Computes ROCs and AUCROC from those scores.

-- Mandatory arguments:
    -ns    FILE     :    List of names of the negative sets. Example:
                         (\"FILE1\" \"FILE2\" ... \"FILEn\")
    -p     FILE     :    List of peak files (bed format). Example:
                         (\"FILE1\" \"FILE2\" ... \"FILEn\")
    -m     FILE     :    List of matrices files. Example:
                         (\"FILE1\" \"FILE2\" ... \"FILEn\")
    -od    PATH     :    Set the Output directory
    -n     STRING   :    List of names for the sets in the ROCs. Example:
                         (\"STRING1\" \"STRING2\" ... \"STRINGn\")

-- optional arguments :
    -g     FILE     :    Fasta of the genome used as reference.
    -pc             :    pocc mode. 
    -color STRINGs  :    list of colors to use in each set (hexadecimal).
                         . Example: (\"STRING1\" \"STRING2\" ... \"STRINGn\")
	-nKSM  INT      :    Number of kmer set motif to be used (default: all)
	-sKSM  STRING   :    Methode to compute KSM score (SUM, BEST or MEAN) (default: SUM)
\n";;
      compute_space) 
echo -e "
==========
usage: compute_space -p <LIST of FILE> -ns <LIST of FILE> -m <LIST of FILE> 
       -n <LIST of STRING> -od <RESULT_DIR> -th <LIST of FLOAT> 
       -nb <INT> -maxy [INT] -maxs [INT] -mins [INT] -ol [INT] -or [INT]
       -g [FILE] [-pc]

general infos: computes spacing analysis on peak files and negatives sets 
               using PWM/TFFM.

-- Mandatory arguments:
    -p     FILE     :    List of peak files (bed, narrowpeak format). Example:
                         (\"FILE1\" \"FILE2\" ... \"FILEn\")
    -ns    FILE     :    List of names of the negative sets. Example:
                         (\"FILE1\" \"FILE2\" ... \"FILEn\")
    -nb    INT      :    number of negatives sets to use against each peak 
                         file (suggested: 3; be sure to create enough negative
                         file using compute_NS)
    -m     FILE     :    List of matrices files. Example:
                         (\"FILE1\" \"FILE2\" ... \"FILEn\")
    -n     STRING   :    List of names for the sets in the ROCs. Example:
                         (\"FILE1\" \"FILE2\" ... \"FILEn\")
    -od    PATH     :    Set the Output directory
    -th    FLOAT    :    list of thresholds to use. (between 0-1 for TFFM
                         matrices & between -60-0 for PWMs). Choosing 
                         thresholds can be quite complicated. One way to get
                         satisfying threshold is to set them empirically and
                         adjust them according to the results. If dots are 
                         missing for some spacing, thresholds are too high, 
                         reduce them (closer to 0 for TFFM; closer to -60 for 
                         PWM). If enrichment increase and reduce itself 
                         rapidly, everywhere in the graph, you are seeing 
                         noises, increase you thresholds (closer to 1 for 
                         TFFM; closer to 0 for PWM). Example:
                         (\"FLOAT1\" \"FLOAT2\" ... \"FLOATn\")

-- optional arguments :
    -maxy  INT      :    maximum enrichment to display on y-axis.(default: NA)
    -maxs  INT      :    maximum spacing to compute. For dimers (using 
                         monomeric matrices), a value between 30 to 50 bp 
                         seems a good start. For tetramers (using dimeric 
                         matrices) a value between 70 to 100 bp is a good 
                         start. You may adjust those values after your first
                         results. (default: )
    -mins  INT      :    minimum spacing to compute. Usually set to 0. You may
                         change this value if you add offsets, this will
                         prevent huge drop off in enrichment for the first 
                         spacings computed.
    -ol    INT      :    offset to apply on the left of the matrix used. This
                         argument (in addition to -or) allows to change the 
                         way spacings are counted. This may be usefull when 
                         you want to count space around a consensus sequence
                         or from the center of the matrix.
    -or    INT      :    offset to apply on the right of the matrix used. See
                         -ol option for details.
    -g     FILE     :    Fasta of the genome used as reference.
    -pc             :    pocc mode.
\n";;
	compute_space_v2) # compute_space -p <PEAKS> -ns <NEG_SET_1> -nb <NB_of_NS> -m <MATRICES> -n <NAMES> -od <RESULT_DIR> -th <THRESHOLDS> -maxy <MAXY> -maxs -mins -ol -or -g -wi -nap -op -co
echo -e "
==========
usage: compute_space -p <LIST of FILE> -ns <LIST of FILE> -m <LIST of FILE> 
       -n <LIST of STRING> -od <RESULT_DIR> -th <LIST of INT> 
       -nb <NB_of_NS> -maxy [INT] -maxs [INT] -mins [INT] -ol [INT] -or [INT]
       -g [FILE] -co [LIST of STRING] [-nap] [-op] [-wi]

general infos: computes spacing version 2 analysis on peak files and negatives
               sets using PWM/TFFM. This new version used R to plot the 
               results. Plots are refreshed & codes are consolidated.

-- Mandatory arguments:
    -p     FILE     :    List of peak files (bed, narrowpeak format,fasta or     
                         scores files accepted). Example:
                         (\"FILE1\" \"FILE2\" ... \"FILEn\")
    -ns    FILE     :    List of names of the negative set (format to use for 
                         name: *_1_neg.*). Example:
                         (\"FILE1\" \"FILE2\" ... \"FILEn\")
    -nb    INT      :    number of negatives sets to use against each peak 
                         file (suggested: 3; be sure to create enough negative
                         file using compute_NS)
    -m     FILE     :    List of matrices  (either PWM or TFFM). Example:
                         (\"FILE1\" \"FILE2\" ... \"FILEn\")
    -n     STRING   :    List of names for the sets in the outputs. Example:
                         (\"STRING1\" \"STRING2\" ... \"STRINGn\")
    -od    PATH     :    Set the output directory
    -th    FLOAT    :    list of thresholds to use. (between 0-1 for TFFM
                         matrices & between -60-0 for PWMs). Choosing 
                         thresholds can be quite complicated. One way to get
                         satisfying thresholds is to set them empirically and
                         adjust them according to the results. A warning will 
                         be printed in terminal if thresholds are too high, 
                         reduce them (closer to 0 for TFFM; closer to -60 for 
                         PWM). If enrichment increase and reduce itself 
                         rapidly, everywhere in the graph, you are seeing 
                         noises, increase you thresholds (closer to 1 for 
                         TFFM; closer to 0 for PWM). Example:
                         (\"FLOAT1\" \"FLOAT2\" ... \"FLOATn\")

-- optional arguments :
    -maxy  INT      :    maximum enrichment to display on y-axis.(default: NA)
    -maxs  INT      :    maximum spacing to compute. For dimers (using 
                         monomeric matrices), a value between 30 to 50 bp 
                         seems a good start. For tetramers (using dimeric 
                         matrices) a value between 70 to 100 bp is a good 
                         start. You may adjust those values after your first
                         results. (default: 50)
    -mins  INT      :    minimum spacing to compute. Usually set to 0. You may
                         change this value if you add offsets, this will
                         prevent huge drop off in enrichment for the first 
                         spacings computed.
    -ol    INT      :    offset to apply on the left of the matrix used. This
                         argument (in addition to -or) allows to change the 
                         way spacings are counted. This may be usefull when 
                         you want to count space around a consensus sequence
                         or from the center of the matrix.
    -or    INT      :    offset to apply on the right of the matrix used. See
                         -ol option for details.
    -g     FILE     :    Fasta of the genome used as reference.
    -op             :    activate \"one panel\" mode. ER, DR and IR for both 
                         negative & positive sets will be add to each other 
                         and plotted in only one panel. Thi mode can be useful
                         if your matrix is palindromic.
    -nap            :    Activate \"no absolute panel\" mode. Absolute 
                         Enrichment will not be plotted on the side of the 
                         panel(s). Can be called with \"-op\" argument.
    -wi             :    Activate \"write interdistance\" mode. This will 
                         trigger the report of every conformation & spacing 
                         found for each file treated. Reports only duos of 
                         sites with score higher than the lowest threshold 
                         used.
    -co    COLORs   :    Colors attributed to each threshold, in same order. 
                         Colors accepted are Hexadecimals (default blu).
\n";;
	heatmap_reads)
echo -e "
========== 
usage: heatmap_reads -b <LIST of FILE> -n <LIST of STRING> -od <PATH> 
       -cp <PATH> -s <FILE> -or [INT] -ws [INT] 

general infos: computes heatmap of coverages to compare two sets. 
               \"initial_comp\" function must have been used before and its 
               results directory specified for \"-cp\" argument.

-- Mandatory arguments:
    -b     FILE     :    List of Bedgraphs. Example:
                         (\"FILE1\" \"FILE2\" ... \"FILEn\")
    -n     STRING   :    List of names for the sets in the plot. Example:
                         (\"STRING1\" \"STRING2\" ... \"STRINGn\")
    -p     PATH     :    Bed file containing the peaks to use for the heatmap.
    -s     FILE     :    chromosome sizes file (name\\tsize format)
    -od    PATH     :    Set the Output directory

-- optional arguments :
    -ow     INT     :    choose which variable to use for ordering the 
                         sequences. 3 choices: 1 to order by 1st set, 2 to 
                         order by 2nd set and 3 to order by ratio 1st/2nd.
                         (default: 3)
    -ws     INT     :    choose the size of the window to plot. (default: 
                         sequence length)
    -c              :    Center the plots around the middle of the peaks
\n";;
	spacing_impact)
echo -e "
==========
usage: spacing_impact -n <LIST of STRING> -cp <PATH> -od [PATH] -g <FILE> 
       -m <FILE> -maxs [INT] -mins [INT] -ol [INT] -or [INT] -sth [INT] -eth 
       [INT] -ith [INT] -sp <LIST of FLOAT> -c [LIST of STRING]

general infos: creates a plot showing the relation of the ratio of coverages 
               and the presence of some specific spacing.

-- Mandatory arguments:
    -n     STRING   :    List of names for the sets in the plot. Example:
                         (\"STRING1\" \"STRING2\" ... \"STRINGn\")
    -cp    PATH     :    directory \"initial_comp\" of the two samples
    -od    PATH     :    Set the Output directory
    -g     FILE     :    Fasta of the genome used as reference.
    -m     FILE     :    matrice file
    -sp    FLOAT    :    List of spacing to search specifically. Example:
                         (\"FLOAT1\" \"FLOAT2\" ... \"FLOATn\")

-- optional arguments :
    -maxs  INT      :    maximum spacing to compute. For dimers (using 
                         monomeric matrices), a value between 30 to 50 bp 
                         seems a good start. For tetramers (using dimeric 
                         matrices) a value between 70 to 100 bp is a good 
                         start. You may adjust those values after your first
                         results. (default: )
    -mins  INT      :    minimum spacing to compute. Usually set to 0. You may
                         change this value if you add offsets, this will
                         prevent huge drop off in enrichment for the first 
                         spacings computed.
    -ol    INT      :    offset to apply on the left of the matrix used. This
                         argument (in addition to -or) allows to change the 
                         way spacings are counted. This may be usefull when 
                         you want to count space around a consensus sequence
                         or from the center of the matrix.
    -or    INT      :    offset to apply on the right of the matrix used. See
                         -ol option for details.
    -sth   INT      :    starting value for threshold
    -eth   INT      :    stoping value for threshold
    -ith   INT      :    incremental value for threshold
    -c     STRING   :    List of sets of color to use in plot (hexadecimal. 
                         format). Example: (\"STRING1\" \"STRING2\" ...
                         \"STRINGn\")
\n";;

    add_coverage)
echo -e "
========== 
usage: add_coverage -b <LIST of FILE> -n <LIST of STRING> -t <FILE> -od <PATH> 

general infos: adds coverage information from a list of coverage files (with 
               the corresponding list of names) to a table obtained from 
               initial_comparison function

-- Mandatory arguments:
    -b     FILE     :    list of bedgraph coverage files to be added to the 
                         table. Example: (\"FILE1\" \"FILE2\" ... \"FILEn\")
    -n     STRING   :    list of names for each coverage file. Example:
                         (\"STRING1\" \"STRING2\" ... \"STRINGn\")
    -n     FILE     :    table from initial_comparison to add coverage info to
    -od    PATH     :    Set the Output directory
\n";;
	*)
echo -e "
usage: call one of the function below to see more details about this specific
       function
example: usage mapping_Fastq_bowtie2

--functions implemented:
mapping_Fastq_bowtie2 :  compute mapping and filtering (PCR duplications, poor
                         mapping quality, multimapping removed) steps.
main_mapping_Fastq    :  directory and file preparation for mapping step
peakcalling_MACS2     :  peak calling step and filtration (forbidden regions)
main_peakcalling      :  file/directory preparation, peakcalling_MACS2 
                         launching, Multiple Sample Peak Calling (MSPC) 
                         procedure, union of coverages, peak resizing.
initial_comparison    :  comparison of samples/replicats, filtering (optional)
                         by height of maximum or global peak coverages, plot 
                         of the union of peaks depending of both coverages, 
                         peak reattribution according to CFR (and not 
                         according to peak caller; plots with both for 
                         comparison). 
compute_motif         :  PWM and TFFM motif generation using learning set 
                         (creation of testing set for later use). 
prep_annotation       :  preparation of annotation file necessary for negative
                         set generation. Modification of gff file (adding 
                         intergenic, promoter regions)
compute_NS            :  creation of negative sets (for ROCs and spacing 
                         analysis). Negative sequences are created to be the 
                         closest possible to the \"positive\" sequences (the 
                         peaks), negative sequences must originate from the 
                         same type of regions (promoters, exon, intergenic, 
                         etc), have a GC percentage as close as possible and 
                         not be bound (not in the positive sequences).
compute_ROCS          :  computes scores for PWM/TFFM on negative sequences 
                         and peaks. compute ROCs and AUCROC from those scores.
compute_space         :  computes spacing analysis on peak files and negatives 
                         sets using PWM/TFFM.
compute_space_v2      :  computes spacing analysis on peak files and negatives
                         sets using PWM/TFFM. This new version uses R to plot 
                         the results. Score is not computed at each run of the
                         function
heatmap_reads         :  computes heatmap of coverages to compare two sets. 
                         \"initial_comparison\" function must have been used
                         before and its results directory specified for 
                         \"-cp\" argument.
spacing_impact        :  creates a plot showing the relation of the ratio of 
                         coverages and the presence of some specific 
add_coverage          :  adds coverage information from a list of coverage
                         files (with the corresponding list of names) to a
                         table obtained from initial_comparison function.


created by Stigliani A. ; Lucas J. ; Blanc-Mathieu R. ; Parcy F.
assembled by Lucas J. ; Blanc-Mathieu R.
\n";;
	esac
echo -e "==========\n"
}
